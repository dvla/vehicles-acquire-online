# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# IoC
# For those controllers whose dependencies are being injected, we use the @controllers syntax here so that
# the router knows we are referring to a class (not an object). In turn it will call on the
# GlobalSettings.getControllerInstance method to resolve the actual controller instance. This method hooks into
# Guice to provide the actual instance complete with its injected dependencies

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)

# Home page
GET     /                                               @controllers.Application.index

#page 1 - Before You Start
GET     /before-you-start                   @controllers.BeforeYouStart.present

#page 2 - Setup Trade Details
GET     /setup-trade-details                @controllers.SetUpTradeDetails.present
POST    /setup-trade-details                @controllers.SetUpTradeDetails.submit

#page 3 - Business Choose Your Address
GET     /business-choose-your-address       @controllers.BusinessChooseYourAddress.present
POST    /business-choose-your-address       @controllers.BusinessChooseYourAddress.submit

#page 3 [optional] - enter address manually
GET     /enter-address-manually             @controllers.EnterAddressManually.present
POST    /enter-address-manually             @controllers.EnterAddressManually.submit

#page 4 - Enter vehicle details
GET     /vehicle-lookup                     @controllers.VehicleLookup.present
POST    /vehicle-lookup                     @controllers.VehicleLookup.submit
GET     /vehicle-lookup-back                @controllers.VehicleLookup.back

#error page when the user looks up a vehicle and it has not been disposed (the keeper is still on record)
GET     /keeper-still-on-record             @controllers.KeeperStillOnRecord.present
GET     /keeper-still-on-record/buy-another @controllers.KeeperStillOnRecord.buyAnotherVehicle
GET     /keeper-still-on-record/finish      @controllers.KeeperStillOnRecord.finish

# Individual keeper details
GET     /private-keeper-details             @controllers.PrivateKeeperDetails.present
POST    /private-keeper-details             @controllers.PrivateKeeperDetails.submit

# Individual keeper details complete
GET     /private-complete-and-confirm       @controllers.PrivateKeeperDetailsComplete.present
POST    /private-complete-and-confirm       @controllers.PrivateKeeperDetailsComplete.submit

# Business keeper details
GET     /business-keeper-details            @controllers.BusinessKeeperDetails.present
POST    /business-keeper-details            @controllers.BusinessKeeperDetails.submit

GET     /uprn-not-found                     @controllers.UprnNotFound.present

GET     /not-implemented                    @controllers.NotImplemented.present

GET     /error/:exceptionDigest             @controllers.Error.present(exceptionDigest)
POST    /error/:exceptionDigest             @controllers.Error.submit(exceptionDigest)

GET     /healthcheck                                    @uk.gov.dvla.vehicles.presentation.common.controllers.HealthCheck.respond
